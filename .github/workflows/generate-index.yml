name: Generate Index Page

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run script to generate index.html
        run: |
          import os
          import subprocess
          from datetime import datetime
          
          def get_file_commit_date(filepath):
              try:
                  cmd = ['git', 'log', '-1', '--format=%cI', filepath]
                  result = subprocess.check_output(cmd).decode('utf-8').strip()
                  return datetime.fromisoformat(result)
              except Exception as e:
                  print(f"Could not get commit date for {filepath}: {e}")
                  return datetime.min

          html_files = []
          for root, _, files in os.walk('.'):
              if '.git' in root or '.github' in root:
                  continue
              for file in files:
                  if file.endswith('.html') and file != 'index.html':
                      filepath = os.path.join(root, file)
                      html_files.append({
                          'path': filepath.lstrip('./'),
                          'date': get_file_commit_date(filepath)
                      })

          html_files.sort(key=lambda x: x['date'], reverse=True)

          # Build the HTML content as a list of strings to avoid YAML parsing issues
          html_parts = [
              '<!DOCTYPE html>',
              '<html lang="zh-CN">',
              '<head>',
              '    <meta charset="UTF-8">',
              '    <meta name="viewport" content="width=device-width, initial-scale=1.0">',
              '    <title>网站目录</title>',
              '    <script src="https://cdn.tailwindcss.com"><\/script>',
              '    <style>',
              "        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }",
              '    </style>',
              '</head>',
              '<body class="bg-slate-50 text-slate-800">',
              '    <div class="container mx-auto max-w-3xl p-4 md:p-8">',
              '        <header class="text-center mb-10">',
              '            <h1 class="text-3xl md:text-4xl font-bold text-slate-900">网站内容索引</h1>',
              '            <p class="mt-2 text-slate-600">所有页面均按最后更新时间倒序排列。</p>',
              '        </header>',
              '        <div class="mb-8">',
              '            <input type="text" id="searchInput" placeholder="在此输入关键词进行搜索..." class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-sky-500 transition">',
              '        </div>',
              '        <main>',
              '            <div id="fileList" class="space-y-4">',
          ]

          if not html_files:
              html_parts.append('<p class="text-center text-slate-500">暂无内容。</p>')
          else:
              html_parts.append('<ul class="space-y-3">')
              for item in html_files:
                  date_str = item['date'].strftime('%Y-%m-%d')
                  list_item = f"""                <li class="file-item bg-white p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300">
                    <a href="{item['path']}" class="flex justify-between items-center">
                        <span class="file-name text-lg font-medium text-sky-700 hover:text-sky-600">{item['path']}</span>
                        <span class="text-sm text-slate-500">{date_str}</span>
                    </a>
                </li>"""
                  html_parts.append(list_item)
              html_parts.append('</ul>')
          
          html_parts.extend([
              '            </div>',
              '        </main>',
              '        <footer class="text-center mt-12 py-4 border-t">',
              '            <p class="text-sm text-slate-500">索引由 GitHub Actions 自动生成</p>',
              '        </footer>',
              '    </div>',
              '    <script>',
              "        const searchInput = document.getElementById('searchInput');",
              "        const fileList = document.getElementById('fileList');",
              "        const items = fileList.getElementsByClassName('file-item');",
              "        searchInput.addEventListener('input', function(e) {",
              "            const searchTerm = e.target.value.toLowerCase();",
              "            for (let i = 0; i < items.length; i++) {",
              "                const item = items[i];",
              "                const fileName = item.querySelector('.file-name').textContent.toLowerCase();",
              "                if (fileName.includes(searchTerm)) {",
              "                    item.style.display = '';",
              "                } else {",
              "                    item.style.display = 'none';",
              "                }",
              "            }",
              "        });",
              '    <\/script>',
              '</body>',
              '</html>',
          ])
          
          html_content = "\n".join(html_parts)
          
          with open('index.html', 'w', encoding='utf-8') as f:
              f.write(html_content)
          print("index.html generated successfully.")

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add index.html
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Automated: Update index.html with search functionality"
          git push
