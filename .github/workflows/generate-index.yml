name: Generate Index Page

on:
  push:
    branches:
      - main # 或者你的主分支名，比如 master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 授予工作流写入仓库内容的权限

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史记录，以便获取文件时间

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run script to generate index.html
        run: |
          import os
          import subprocess
          from datetime import datetime
          
          def get_file_commit_date(filepath):
              try:
                  # 使用 git log 获取文件的最后一次提交时间 (ISO 8601 格式)
                  cmd = ['git', 'log', '-1', '--format=%cI', filepath]
                  result = subprocess.check_output(cmd).decode('utf-8').strip()
                  return datetime.fromisoformat(result)
              except Exception as e:
                  print(f"Could not get commit date for {filepath}: {e}")
                  # 如果出错，返回一个很早的时间，使其排在最后
                  return datetime.min

          html_files = []
          for root, _, files in os.walk('.'):
              # 忽略 .github 目录和隐藏目录
              if '.git' in root or '.github' in root:
                  continue
              for file in files:
                  if file.endswith('.html') and file != 'index.html':
                      filepath = os.path.join(root, file)
                      html_files.append({
                          'path': filepath.lstrip('./'),
                          'date': get_file_commit_date(filepath)
                      })

          # 按时间倒序排序
          html_files.sort(key=lambda x: x['date'], reverse=True)

          # --- 开始生成 HTML 内容 ---
          html_content = """<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>网站目录</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
    </style>
</head>
<body class="bg-slate-50 text-slate-800">
    <div class="container mx-auto max-w-3xl p-4 md:p-8">
        <header class="text-center mb-10">
            <h1 class="text-3xl md:text-4xl font-bold text-slate-900">网站内容索引</h1>
            <p class="mt-2 text-slate-600">所有页面均按最后更新时间倒序排列。</p>
        </header>
        <main>
            <div class="space-y-4">
"""

          if not html_files:
              html_content += '<p class="text-center text-slate-500">暂无内容。</p>'
          else:
              html_content += '<ul class="space-y-3">'
              for item in html_files:
                  # 格式化日期显示
                  date_str = item['date'].strftime('%Y-%m-%d')
                  html_content += f"""
                <li class="bg-white p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300">
                    <a href="{item['path']}" class="flex justify-between items-center">
                        <span class="text-lg font-medium text-sky-700 hover:text-sky-600">{item['path']}</span>
                        <span class="text-sm text-slate-500">{date_str}</span>
                    </a>
                </li>"""
              html_content += '</ul>'
          
          html_content += """
            </div>
        </main>
        <footer class="text-center mt-12 py-4 border-t">
            <p class="text-sm text-slate-500">索引由 GitHub Actions 自动生成</p>
        </footer>
    </div>
</body>
</html>
"""
          # --- HTML 内容生成结束 ---

          with open('index.html', 'w', encoding='utf-8') as f:
              f.write(html_content)
          print("index.html generated successfully.")

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add index.html
          # 检查是否有文件变动
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Automated: Update index.html"
          git push
